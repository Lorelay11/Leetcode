Given a string paragraph and a string array of the banned words banned, return the most frequent word that is not 
banned. It is guaranteed there is at least one word that is not banned, and that the answer is unique.
The words in paragraph are case-insensitive and the answer should be returned in lowercase.


class Solution {
    public String mostCommonWord(String paragraph, String[] banned) {
        //Create Hash set for banned words
        HashSet <String> BannedWords = new HashSet<>();
        //create Hash map to put all words wich a not banned and add number of occurrence
        HashMap<String, Integer> ValidWordCounts = new HashMap();
       for(String BannedWord : banned) {
           BannedWords.add (BannedWord);
       }
        
        //transform string paragraf to array of strings which are in lower case and all not letter symbols are ignored
       String [] words = paragraph.toLowerCase().split("\\W+");
        //loop true array and add all valid words to created hash map
        for(String word : words){
            if (!BannedWords.contains(word)){
                ValidWordCounts.put(word, ValidWordCounts.getOrDefault(word, 0) +1);
            }
        }
        //create max to store the biggest number of word occurrence and create empty string to write the result
        int max = 0;
        String result = "";
        //loop true hash map and find the word with the biggest key value and write key to string result
        for (String word : ValidWordCounts.keySet()){
            if (ValidWordCounts.get(word)>max){
                max = ValidWordCounts.get(word);
                result = word;
            }
                
        }
        return result;    
    }
}
