Count the number of prime numbers less than a non-negative number, n.

 

Example 1:

Input: n = 10
Output: 4
Explanation: There are 4 prime numbers less than 10, they are 2, 3, 5, 7.
Example 2:

Input: n = 0
Output: 0
Example 3:

Input: n = 1
Output: 0
 

Constraints:

0 <= n <= 5 * 106



class Solution {
    public int countPrimes(int n) {
    int count = 0;
    boolean [] isPrime = new boolean[n];
    Arrays.fill(isPrime, true);
    for(int i=2;i<n;i++){
        //check if in i position true than add 1 to count
        if(isPrime[i]==true) {
            count++;
            //System.out.println("It is count: "+count);
            //if position can divided by j than it is not prime so that position it turned to
            //false and will not be counted
            for (int j = i; j < n; j += i) {
                isPrime[j] = false;
                //System.out.println("it is j: "+j);
                //System.out.println("***********************");
            }
        }
    }
    return count;
    }

}
