Given a sorted array of distinct integers and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.

 

Example 1:

Input: nums = [1,3,5,6], target = 5
Output: 2
Example 2:

Input: nums = [1,3,5,6], target = 2
Output: 1
Example 3:

Input: nums = [1,3,5,6], target = 7
Output: 4
Example 4:

Input: nums = [1,3,5,6], target = 0
Output: 0
Example 5:

Input: nums = [1], target = 0
Output: 0

class Solution {
    public void main(String[] args) {
        System.out.println(searchInsert(new int[]{0,3,5,6}, 1));
    }
    public static int searchInsert(int[] nums, int target) {
        int start = 0;
        int end = nums.length-1;
        while(start+1<end){
            int mid = start+(end-start)/2;
            if(nums[mid]==target){
                return mid;
            }else if (nums[mid]<target){
                start = mid;
            }else if (nums[mid]>target){
                end = mid;
            }
        }
    if (nums[end]<target){
        return end+1;
    }else if(nums[start]>=target){
        return start;
    }else{
        return end;
    }
    }
}
